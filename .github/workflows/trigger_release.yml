on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: stable or canary?
        required: true
        type: choice
        options:
          - canary
          - stable

      semverType:
        description: semver type?
        type: choice
        options:
          - patch
          - minor
          - major

    secrets:
      RELEASE_BOT_TOKEN:
        required: true

name: Trigger Release

env:
  NAPI_CLI_VERSION: 2.14.7
  TURBO_VERSION: 1.6.3
  RUST_TOOLCHAIN: nightly-2023-03-09
  PNPM_VERSION: 7.24.3
  NODE_MAINTENANCE_VERSION: 16
  NODE_LTS_VERSION: 18

jobs:
  start:
    runs-on: ubuntu-latest
    env:
      NEXT_TELEMETRY_DISABLED: 1
      # we build a dev binary for use in CI so skip downloading
      # canary next-swc binaries in the monorepo
      NEXT_SKIP_NATIVE_POSTINSTALL: 1

    environment: release-${{ github.event.inputs.releaseType }}
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{ steps.docs-change.outputs.docsChange == 'nope' }}
        with:
          node-version: 18
          check-latest: true

      - run: git clone https://ijjk:${{ secrets.START_RELEASE_TOKEN }}@github.com/vercel/next.js.git --depth=25 .

      - run: git describe || 'echo failed to get tag'

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - run: npm i -g pnpm@${PNPM_VERSION}

      - id: get-store-path
        run: echo STORE_PATH=$(pnpm store path) >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        timeout-minutes: 5
        id: cache-pnpm-store
        with:
          path: ${{ steps.get-store-path.outputs.STORE_PATH }}
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-
            pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}

      - run: pnpm install

      - run: pnpm run build

      - run: node ./scripts/start-release.js --release-type ${{ github.event.inputs.releaseType }} --semver-type ${{ github.event.inputs.semverType }}
        env:
          RELEASE_BOT_TOKEN: ${{ secrets.RELEASE_BOT_TOKEN }}
